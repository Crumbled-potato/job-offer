<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jobsys.work.mapper.CollectMapper">

    <resultMap type="Collect" id="CollectResult">
        <result property="colletId" column="collet_id"/>
        <result property="jobId" column="job_id"/>
        <result property="comId" column="com_id"/>
        <result property="userId" column="user_Id"/>
        <result property="userName" column="user_name"/>
        <result property="jobName" column="job_name"/>
        <result property="createTime" column="create_time"/>
        <result property="createBy" column="create_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="comName" column="com_name"/>
    </resultMap>

    <sql id="selectCollectVo">
        select collet_id,
               job_id,
               com_id,
               user_Id,
               user_name,
               job_name,
               create_time,
               create_by,
               update_time,
               update_by,
               com_name
        from collect
    </sql>

    <select id="selectCollectList" parameterType="Collect" resultMap="CollectResult">
        <include refid="selectCollectVo"/>
        <where>
            <if test="jobId != null ">and job_id = #{jobId}</if>
            <if test="comId != null ">and com_id = #{comId}</if>
            <if test="userId != null ">and user_Id = #{userId}</if>
            <if test="userName != null  and userName != ''">and user_name like concat('%', #{userName}, '%')</if>
            <if test="jobName != null  and jobName != ''">and job_name like concat('%', #{jobName}, '%')</if>
            <if test="comName != null  and comName != ''">and com_name like concat('%', #{comName}, '%')</if>
        </where>
        order by create_time
    </select>

    <select id="selectCollectByColletId" parameterType="Integer" resultMap="CollectResult">
        <include refid="selectCollectVo"/>
        where collet_id = #{colletId}
    </select>

    <insert id="insertCollect" parameterType="Collect" useGeneratedKeys="true" keyProperty="colletId">
        insert into collect
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="jobId != null">job_id,</if>
            <if test="comId != null">com_id,</if>
            <if test="userId != null">user_Id,</if>
            <if test="userName != null">user_name,</if>
            <if test="jobName != null">job_name,</if>
            <if test="createTime != null">create_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="comName != null">com_name,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="jobId != null">#{jobId},</if>
            <if test="comId != null">#{comId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="userName != null">#{userName},</if>
            <if test="jobName != null">#{jobName},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="comName != null">#{comName},</if>
        </trim>
    </insert>

    <update id="updateCollect" parameterType="Collect">
        update collect
        <trim prefix="SET" suffixOverrides=",">
            <if test="jobId != null">job_id = #{jobId},</if>
            <if test="comId != null">com_id = #{comId},</if>
            <if test="userId != null">user_Id = #{userId},</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="jobName != null">job_name = #{jobName},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="comName != null">com_name = #{comName},</if>
        </trim>
        where collet_id = #{colletId}
    </update>


    <update id="collect">
        update collect
        set user_name = #{userName}
        where collet_id = #{colletId}
    </update>

    <delete id="deleteCollectByColletId" parameterType="Integer">
        delete
        from collect
        where collet_id = #{colletId}
    </delete>

    <delete id="deleteCollectByColletIds" parameterType="String">
        delete from collect where collet_id in
        <foreach item="colletId" collection="array" open="(" separator="," close=")">
            #{colletId}
        </foreach>
    </delete>
</mapper>
